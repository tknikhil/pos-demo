on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

name: "Build & Release"

jobs:
  build:
    name: Build & Release
    runs-on: windows-latest

    steps:
      # Checkout repository
      - uses: actions/checkout@v3

      # Setup Java environment
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      # Setup Flutter
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          architecture: x64

      # Ensure ANDROID_HOME directory exists
      - name: Ensure ANDROID_HOME directory exists
        run: |
          if (-not (Test-Path "$env:ANDROID_HOME")) { New-Item -ItemType Directory -Force -Path "$env:ANDROID_HOME" }

      # Reinstall Android Command-Line Tools
      - name: Reinstall Android Command-Line Tools
        shell: pwsh
        run: |
          if (Test-Path "$env:ANDROID_HOME\cmdline-tools") {
            Remove-Item -Recurse -Force "$env:ANDROID_HOME\cmdline-tools"
          }
          mkdir -p "$env:ANDROID_HOME\cmdline-tools"
          curl -o commandlinetools.zip https://dl.google.com/android/repository/commandlinetools-win-8512546_latest.zip
          Expand-Archive -Path commandlinetools.zip -DestinationPath "$env:ANDROID_HOME\cmdline-tools"
          Rename-Item "$env:ANDROID_HOME\cmdline-tools\cmdline-tools" "$env:ANDROID_HOME\cmdline-tools\latest"

      # Install Android SDK Platforms and Tools
      - name: Install Android SDK Platforms and Tools
        shell: pwsh
        run: |
          & "$env:ANDROID_HOME\cmdline-tools\latest\bin\sdkmanager.bat" "platforms;android-35" "build-tools;35.0.0"

      # Accept Android SDK Licenses
      - name: Accept Android SDK Licenses
        shell: pwsh
        run: |
          & "$env:ANDROID_HOME\cmdline-tools\latest\bin\sdkmanager.bat" --licenses | Out-Null

      # Clean Environment
      - name: Clean Environment
        run: |
          flutter clean
          if (Test-Path "$env:USERPROFILE\.gradle\caches") { Remove-Item -Recurse -Force "$env:USERPROFILE\.gradle\caches" }
          if (Test-Path "$env:USERPROFILE\.gradle\daemon") { Remove-Item -Recurse -Force "$env:USERPROFILE\.gradle\daemon" }
          if (Test-Path "$env:USERPROFILE\.gradle\native") { Remove-Item -Recurse -Force "$env:USERPROFILE\.gradle\native" }
          if (Test-Path "$env:USERPROFILE\.gradle\wrapper") { Remove-Item -Recurse -Force "$env:USERPROFILE\.gradle\wrapper" }
          if (Test-Path ".\packages\flutter_tools\gradle\build") { Remove-Item -Recurse -Force ".\packages\flutter_tools\gradle\build" }

      # Fetch Flutter dependencies
      - name: Get Flutter Dependencies
        run: flutter pub get

      # Build Android (APK)
      - name: Build Android APK
        run: flutter build apk --debug --split-per-abi

      # Push to Debug
      - name: Push to Debug
        uses: ncipollo/release-action@v1
        with:
          artifacts: build/app/outputs/apk/debug/*
          tag: v1.0.${{ github.run_number }}
          token: ${{ secrets.TOKEN }}